{"ast":null,"code":"var _jsxFileName = \"/Users/rabdelmonem/Desktop/employee-directory/src/components/EmployeeTable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { TableHeader } from '../TableHeader';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EmployeeTable() {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=10&nat=us\").then(res => setEmployees(res.data.results)).catch(err => console.log(err));\n  }, []);\n  console.log(employees);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(TableHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: employee.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: employee.name.first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: employee.name.last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeeTable, \"/A1Ii8+9z2SDNTFDutGp9pjEZTU=\");\n\n_c = EmployeeTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeTable\");","map":{"version":3,"sources":["/Users/rabdelmonem/Desktop/employee-directory/src/components/EmployeeTable/index.js"],"names":["React","useEffect","useState","Table","TableHeader","axios","EmployeeTable","employees","setEmployees","get","then","res","data","results","catch","err","console","log","map","employee","id","name","first","last"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACI,GAAN,CAAU,8CAAV,EACKC,IADL,CACUC,GAAG,IAAIH,YAAY,CAACG,GAAG,CAACC,IAAJ,CAASC,OAAV,CAD7B,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKA,SAAS,CAACW,GAAV,CAAcC,QAAQ,iBACnB;AAAA,gCACJ;AAAA,oBAAKA,QAAQ,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA,oBAAKD,QAAQ,CAACE,IAAT,CAAcC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFI,eAGJ;AAAA,oBAAKH,QAAQ,CAACE,IAAT,CAAcE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAHI;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzBejB,a;;KAAAA,a","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { TableHeader } from '../TableHeader';\nimport axios from 'axios';\n\nexport function EmployeeTable() {\n    const [employees, setEmployees] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"https://randomuser.me/api/?results=10&nat=us\")\n            .then(res => setEmployees(res.data.results))\n            .catch(err => console.log(err))\n    }, []);\n\n    console.log(employees);\n\n    return (\n        <Table striped bordered hover>\n            <TableHeader />\n            <tbody>\n                {employees.map(employee => (\n                    <tr>\n                <td>{employee.id}</td>\n                <td>{employee.name.first}</td>\n                <td>{employee.name.last}</td>\n            </tr>\n        ))}\n            </tbody>\n</Table>\n    )\n}"]},"metadata":{},"sourceType":"module"}